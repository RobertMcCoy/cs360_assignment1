@using ChessClubManagement.ViewModels
@model ChessClubManagement.ViewModels.StudentEditViewModel

@{
    Layout = "_Layout";
    ViewData["Title"] = Model.User.Nickname;
}

@{
    if (TempData["Result"] != null && TempData["Result"].ToString().Equals("Added to division successfully"))
    {
        <div class="alert alert-success">
            Student was updated successfully.
        </div>
    }
    else if (TempData["Result"] != null && !TempData["Result"].ToString().Equals("Added to division successfully"))
    {
        <div class="alert alert-danger">
            @TempData["Result"]
        </div>
    }
}

<div row>
    <div class="col-md-6">
        <h1>@Model.User.Nickname</h1>
        <div class="input-group">
            <label class="input-group-addon">Name</label>
            <input asp-for="@Model.User.Nickname" type="text" class="form-control" id="studentFnameTxt" placeholder="Student name" readonly="readonly"/>
        </div>
        <br/>
        <br/>
        <form asp-action="AddToDivision" method="post">
            <input asp-for="@Model.User.Id" type="hidden" />
            <div class="input-group">
                <label class="input-group-addon">Season</label>
                <select asp-items="@ViewBag.SeasonDropDown" asp-for="@Model.NewDivisionSeasonId" id="seaondropdown" class="form-control" onchange="javascript: GetDivisionsForSeasonDropDown(this.value);"></select>
            </div>
            <div class="input-group">
                <label class="input-group-addon">Division</label>
                <select id="divisiondropdown" asp-for="@Model.NewUserStudent.DivisionId" class="form-control"></select>
            </div>
            <input type="submit" value="Add To Division" class="btn btn-info"/>
        </form>
        <br />
        <br />
        <table class="table table-striped table-hover">
            <tr>
                <th>Season</th>
                <th>Division</th>
                <th></th>
            </tr>
            @foreach (var division in Model.StudentUsers)
            {
                <tr>
                    <td>@division.Division.Season.SeasonName</td>
                    <td>@division.Division.DivisionName</td>
                    <td>
                        @if (User.Claims.Any(c => c.Type == "http://schemas.microsoft.com/ws/2008/06/identity/claims/role" && c.Value == "admin"))
                        {
                            <form asp-action="RemoveDivisionFromUser" asp-route-id="@division.StudentId"><input type="submit" value="Remove From Division" class="btn btn-info"/></form>
                        }
                    </td>
                </tr>
            }
        </table>
        <input type="submit" value="Save" id="saveStudent" class="btn btn-info"/>
    </div>
    <div class="col-md-6">
        <h1>Match History</h1>
        <ul>
            @foreach (var match in Model.MatchHistory)
            {
                <li>
                    @DateTime.Parse(match.MatchDate.ToString()).ToString("MM/dd/yyyy") - @match.Student1.User.Nickname vs. @match.Student2.User.Nickname
                </li>
            }
        </ul>
    </div>
</div>